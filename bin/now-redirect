#!/usr/bin/env node

const spawn = require('child_process').spawn
const path = require('path')
const ncp = require('copy-paste')
const chalk = require('chalk')

if (process.argv.length !== 3 || process.argv[2] === '-h' || process.argv[2] === 'help') {
  console.log('Usage: now-redirect <destination-domain>')
  console.log('It will deploy app via zeit\'s now that redirects all requests to the given domain.')
  process.exit(0)
}

const cmd = process.platform === 'win32' ? 'now.cmd' : 'now'
const dir = path.resolve(__dirname, '..', 'app')

let host = process.argv[2]

if (!/^https?:\/\//i.test(host)) {
  host = 'http://' + host
}

const deploymentName = host.replace('http://', '')

// Have to force because otherwise subsequent deployments with different envs and same code are ignored
const flagList = ['-f', '-e', "REDIRECT_HOST=" + host, dir, "--name=" + deploymentName]

const now = spawn(cmd, flagList, { stdio: [ 'inherit', 'pipe', 'inherit' ] })

now.on('error', err => console.error(err))

let buffer = ''
now.stdout.on('data', data => {
  buffer += data.toString()
})

console.log(`> Deploying app that redirects all requests to ${host}...`)
now.on('close', code => {
  if (code === 0) {
    const url = buffer
    ncp.copy(url, () => {
      console.log(`${chalk.cyan('> Ready!')} ${chalk.bold(url)} (copied to clipboard)`)
      console.log(`> Requests to ${chalk.bold(url + '/*')} will be redirected to ${chalk.bold(host + '/*')}`)
      console.log(`> If it works as expected, alias it with:`)
      console.log(chalk.bold(`  now alias ${url} domain-to-be-redirected`))
    })
  }
})

process.on('SIGINT', () => {
  now.kill('SIGINT')
})
